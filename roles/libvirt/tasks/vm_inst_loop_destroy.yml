---
############################################################
# tasks file for destroying instance of vm type
############################################################
- name: Set vm_name variable
  vars:
    vm_name_pre: "{{ (ii_vm.value.name is defined) | ternary(ii_vm.value.name, ii_vm.key) }}"
  set_fact:
    vm_name: "{{ vm_name_pre }}{{ hostname_suffix }}{{ ii_index }}"

- name: Prepare instance params
  vars:
    index: "{{ ii_index - 1 }}"
    inst_volumes_loc:
      "{{ ii_vm.value.instances[index | int].volumes if ii_vm.value.instances[index | int].volumes is defined
          else ii_vm.value.volumes if ii_vm.value.volumes is defined
          else {} }}"
  set_fact:
    inst_volumes: "{{ inst_volumes_loc }}"

- name: Destroy vm block
  block:

    - name: Check status of vm server
      virt:
        name: "{{ vm_name }}"
        command: status
      register: vmstatus

    - name: Destroy VM
      virt:
        name: "{{ vm_name }}"
        command: destroy
      when: vmstatus.status == "running"
      ignore_errors: 'yes'

    - name: Remove VM
      virt:
        name: "{{ vm_name }}"
        command: undefine
      when: ii_vm.value.boot_mode != 'uefi'
      ignore_errors: 'yes'

    - name: Remove VM with nvram
      command: "virsh undefine {{ vm_name }} --nvram"
      become: true
      when: ii_vm.value.boot_mode == 'uefi'
      ignore_errors: 'yes'

    - name: Remove vm from /etc/host
      vars:
        vm_hostname: "{{ (domain_name is defined) | ternary(vm_name + '.' + domain_name, vm_name) }}"
      lineinfile:
        path: "/etc/hosts"
        regexp: "{{ vm_hostname }}"
        state: absent
      become: true
      delegate_to: localhost

  when: vm_name in vm_list

- name: Loop for volumes of vm instance
  include_tasks: vm_vol_loop_destroy.yml
  loop: "{{ inst_volumes | dict2items }}"
  loop_control:
    loop_var: ii_vol
    label: "{{ ii_vol.key }}"

- name: Refresh storage pool list
  virt_pool:
    command: refresh
    name: "{{ vol_pool.name }}"
  ignore_errors: 'yes'

- name: Remove previous key from authorized keys
  vars:
    vm_hostname: "{{ (domain_name is defined) | ternary(vm_name + '.' + domain_name, vm_name) }}"
  command: ssh-keygen -R "{{ vm_hostname }}"
  ignore_errors: 'yes'
